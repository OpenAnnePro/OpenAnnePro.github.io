{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is an alternative firmware for the Anne Pro 2 Keyboard. This is by no means endorsed by Obins. ",
    "url": "https://openannepro.github.io/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "About",
    "title": "Contributors",
    "content": "Thanks to @Rusty on the Discord server for measuring his C18 revision, without him it would be impossible to add the C18 support. Thanks to @Stanley00 on the Discord server for his work on porting Shine project to support C18. Thanks to @Msvisser on the Discord server for his work in helping me reversing the bootloader. ",
    "url": "https://openannepro.github.io/about/#contributors",
    "relUrl": "/about/#contributors"
  },"2": {
    "doc": "About",
    "title": "Project URLs",
    "content": ". | QMK Firmware Port The open source Keyboard Firmware | AnnePro2-Shine Anne Pro 2 Custom LED Firmware | AnnePro2-Tools Anne Pro 2 Flashing Tool | . ",
    "url": "https://openannepro.github.io/about/#project-urls",
    "relUrl": "/about/#project-urls"
  },"3": {
    "doc": "About",
    "title": "Contact",
    "content": "Feel free to contact me with any question at codetector#codetector.cn . Also I will be writing a blog series about reversing this keyboard, feel free to check it out when it comes out. Codetector’s Blog . ",
    "url": "https://openannepro.github.io/about/#contact",
    "relUrl": "/about/#contact"
  },"4": {
    "doc": "About",
    "title": "Discord Server",
    "content": "We have a discord server started by @ah- for his Anne Pro 1 project. Feel free to join and discuss anything Anne Pro 1/2 related :D . Anne Pro Dev . ",
    "url": "https://openannepro.github.io/about/#discord-server",
    "relUrl": "/about/#discord-server"
  },"5": {
    "doc": "Contributing",
    "title": "Contributing",
    "content": "Thanks for your interest in helping out with this project. This project couldn’t have existed without everyone’s help. Below is a list of Goals that we are currently looking to get done, feel free to contribute. If you would like to contribute code, feel free to fork the repo and make PRs as you see fit. ",
    "url": "https://openannepro.github.io/contributing/",
    "relUrl": "/contributing/"
  },"6": {
    "doc": "Contributing",
    "title": "To-Do Items",
    "content": ". | Reverse Engineer the AnnePro IAP Protocol | Setup a QMK configurator site | Develope a better LED color management system | Reverse Engineer the Bluetooth Protocol (Got protocol from Obins) | Write a custom Bluetooth Firmware for the CC2541 BLE processor | Implement LED backlight / effects for the AnnePro2-Shine project | Improve communication protocol between Main and LED MCU | Improve documentation quality | . ",
    "url": "https://openannepro.github.io/contributing/#to-do-items",
    "relUrl": "/contributing/#to-do-items"
  },"7": {
    "doc": "Customization",
    "title": "Special Keys on the default keymaps",
    "content": ". | FN2 + 8: Disable LEDs | FN2 + 9: Enable LEDs / Switch profiles | FN2 + 0: Change brightness | . ",
    "url": "https://openannepro.github.io/customization/#special-keys-on-the-default-keymaps",
    "relUrl": "/customization/#special-keys-on-the-default-keymaps"
  },"8": {
    "doc": "Customization",
    "title": "Keymaps",
    "content": "Unfortunately, the Anne Pro 2 currently does not have support for automatic QMK configurators. This means you have to manually edit the file itself. These profiles are located in annepro_qmk/keyboards/annepro2/keymaps/ as separate folders for each profile. Each profile has a keymap.c file. You can copy one of the default profile folders as a starting template and edit it to your preference. Recompiling the firmware will automatically compile your custom keymap to whatever name you named the folder. ",
    "url": "https://openannepro.github.io/customization/#keymaps",
    "relUrl": "/customization/#keymaps"
  },"9": {
    "doc": "Customization",
    "title": "Layout Customization",
    "content": "The default keymaps already have layouts based on the stock Anne Pro 2 layout. Changing layouts is easy. Check here for keycodes. Each layer keymap, such as [_BASE_LAYER], is shaped to look similar to the keyboard. This will make it easier to customize. You can also see the ASCII graphic of the keyboard above it to see what the layer represents. You can also do much more than this. Just check the QMK docs for more info. As an example, to make the ESC key produce an “A,” switch KC_ESC to KC_A. ",
    "url": "https://openannepro.github.io/customization/#layout-customization",
    "relUrl": "/customization/#layout-customization"
  },"10": {
    "doc": "Customization",
    "title": "Changing Default LED Profile",
    "content": "You should see this function in your keymap.c file if it’s based on one of the defaults: . // Code to run after initializing the keyboard void keyboard_post_init_user(void) { // Here are two common functions that you can use. For more LED functions, refer to the file \"qmk_ap2_led.h\" // annepro2-shine disables LEDs by default. Uncomment this function to enable them at startup. // annepro2LedEnable(); // Additionally, it also chooses the first LED profile by default. Refer to the \"profiles\" array in main.c in // annepro2-shine to see the order. Replace \"i\" with the index of your preferred profile. (i.e the RED profile is index 0) // annepro2LedSetProfile(i); } . This function will run after the keyboard has successfully started. Uncomment annepro2LedEnable() by removing the two slashes before it to enable LEDs at startup. By default, it is disabled. Uncomment annepro2LedSetProfile(i) to change the default color profile. Replace i with one of the numbers in the list below that corresponds to a profile: . 0: Full red . 1: Full green . 2: Full blue . 3: Horizontal rainbow . 4: Vertical Rainbow . 5: Low-FPS Animated Vertical Rainbow . 6: Animated Vertical Rainbow . 7: Animated Horizontal Rainbow . 8: Animated Breathing . 9: Animated Red Vertical Wave . 10: Animated Spectrum . 11: Reactive Fade . This corresponds to the same order when switching color profiles manually. ",
    "url": "https://openannepro.github.io/customization/#changing-default-led-profile",
    "relUrl": "/customization/#changing-default-led-profile"
  },"11": {
    "doc": "Customization",
    "title": "Customization",
    "content": " ",
    "url": "https://openannepro.github.io/customization/",
    "relUrl": "/customization/"
  },"12": {
    "doc": "Frequently Asked Questions",
    "title": "FAQs",
    "content": ". | If I flash this firmware, will I be able to revert to the original Anne Pro firmware later? | . Yes. We use the original Anne Pro 2’s bootloader to load our firmware, so reverting is as easy as putting the keyboard into IAP mode and do an firmware update with ObinsKit. (Note: We have noticed ObinsKit might have trouble restoring when under macOS, but have had great success with Windows.) . | I am having trouble building the firmware, what am I missing? | . First, please make sure you have fully read the install guide, this will help everyone in the discord server and yourself to save time. Since we are all volunteering to help eachother out. Also make sure you have all the required tool chains installed. (gcc-arm-none-eabi, make, etc) . | Flashing stuck on device is Some(\"USB-HID IAP\") | . This one is interesting. I personally have encountered this a few times, but I have always been able to solve this by a) changing a usb port. b) restart computer. | Any advice for Windows users? | . Yes. In fact, I recommend windows users to build the firmware under WSL and flash the firmware in native windows environment. (aka install rustc in windows and build annepro2-tools there). This seems to work the best for most people. YMMV. ",
    "url": "https://openannepro.github.io/faq/#faqs",
    "relUrl": "/faq/#faqs"
  },"13": {
    "doc": "Frequently Asked Questions",
    "title": "Frequently Asked Questions",
    "content": " ",
    "url": "https://openannepro.github.io/faq/",
    "relUrl": "/faq/"
  },"14": {
    "doc": "Home",
    "title": "Open Anne Pro",
    "content": "This is an alternative firmware for the Anne Pro 2 Keyboard. This is for the Anne Pro 2 keyboard, for the Anne Pro 1, please refer to the anne-key project. ",
    "url": "https://openannepro.github.io/#open-anne-pro",
    "relUrl": "/#open-anne-pro"
  },"15": {
    "doc": "Home",
    "title": "Why Custom Firmware",
    "content": "From my short and limited experience with the original firmware provided by ObinsLab, I find it to be extremely buggy. One of the most significant problem being compatibility in BIOS. Aside from buggy, I would also like to switch the “Magic FN” from caps lock to other keys. ",
    "url": "https://openannepro.github.io/#why-custom-firmware",
    "relUrl": "/#why-custom-firmware"
  },"16": {
    "doc": "Home",
    "title": "Status",
    "content": "This project is still under heavy development and in its early stages. I would recommend to always have a backup keyboard if you are going to participate in the project. (i.e. if something arises you still have a second way to input keystrokes for long enough that you can either restore to the Obins firmware or find a solution). To see a list of To-Do items click here . ",
    "url": "https://openannepro.github.io/#status",
    "relUrl": "/#status"
  },"17": {
    "doc": "Home",
    "title": "QMK",
    "content": "QMK is a powerful open source keyboard firmware used by many open source keyboards that are on the market today. It is most famous for its appearance in the Plank and ErgoDox EZ keyboards. Currently, we have a fully functional port of the QMK firmware for both the c15 and c18 revision. (If you are unsure which one you have, read below.) This includes key matrix function, which is the “most important” part of a keyboard, I would say. ",
    "url": "https://openannepro.github.io/#qmk",
    "relUrl": "/#qmk"
  },"18": {
    "doc": "Home",
    "title": "AnnePro2-Shine",
    "content": "Shine is the custom firmware designed to run on the LED micro-controller of the keyboard to control lighting effects. In Obins’ words, this is the Light processor. Currently this project is in its infancy, only very basic features has been tested. It can act as a decent indicator light (e.g. Caps Lock) using the RGB LEDs. But there is a lot of potential out there, as the firmware is only about 5KB in size right now, and the microcontroller can hold 64/128 KB of code for the c15/c18 revision respectively. ",
    "url": "https://openannepro.github.io/#annepro2-shine",
    "relUrl": "/#annepro2-shine"
  },"19": {
    "doc": "Home",
    "title": "Bluetooth",
    "content": "Currently the bluetooth support is based on the original Obins BLE processor firmware, which means you will not need to reflash the BLE chip if you have the latest stock firmware on it. Contact me in the discord if you need a copy of the stock BLE firmware to flash. ",
    "url": "https://openannepro.github.io/#bluetooth",
    "relUrl": "/#bluetooth"
  },"20": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "https://openannepro.github.io/",
    "relUrl": "/"
  },"21": {
    "doc": "Build Using Docker",
    "title": "The following build script is provided by @zinosat on the Discord Server",
    "content": "Save the following into a file named Dockerfile . # docker build -t ap2 . # # docker run --privileged -h ap2 --rm -it -v ${PWD}:/host --user $(id -u) -w /home/dev ap2 bash FROM debian:bullseye MAINTAINER Davide Viti &lt;zinosat@gmail.com&gt; RUN sed -i \\ -e \"s|deb.debian.org|debian.fastweb.it|g\" \\ /etc/apt/sources.list RUN apt-get update &amp;&amp; \\ DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\ build-essential ca-certificates less git sudo \\ pkg-config libusb-1.0-0-dev cargo gcc-arm-none-eabi libstdc++-arm-none-eabi-newlib RUN adduser --disabled-password --gecos '' dev &amp;&amp; \\ adduser dev sudo &amp;&amp; \\ echo '%sudo ALL=(ALL) NOPASSWD:ALL' &gt;&gt; /etc/sudoers RUN cd /home/dev; sudo -H -u dev git clone https://github.com/OpenAnnePro/AnnePro2-Tools.git &amp;&amp; \\ cd AnnePro2-Tools &amp;&amp; cargo build --release RUN cd /home/dev; sudo -H -u dev git clone https://github.com/OpenAnnePro/qmk_firmware.git annepro-qmk --recursive --depth 1 &amp;&amp; \\ cd annepro-qmk &amp;&amp; ./util/qmk_install.sh &amp;&amp; make annepro2/c18 RUN cd /home/dev; sudo -H -u dev git clone https://github.com/OpenAnnePro/AnnePro2-Shine.git --recursive --depth 1 &amp;&amp; \\ cd AnnePro2-Shine &amp;&amp; make C18 RUN cp /home/dev/AnnePro2-Tools/target/release/annepro2_tools /home/dev/ RUN cp /home/dev/annepro-qmk/.build/annepro2_c18_default.bin /home/dev/ RUN cp /home/dev/AnnePro2-Shine/build/C18/annepro2-shine-C18.bin /home/dev/ ENV TZ /usr/share/zoneinfo/Europe/Rome . and run . docker build -t ap2 . docker run --privileged -h ap2 --rm -it -v ${PWD}:/host --user $(id -u) -w /home/dev ap2 bash . If you run Linux system it is possible to copy firmware and annepro2_tools binary from the container to the host with this command: . docker run --rm -it --user $(id -u) -v ${PWD}:/host ap2 bash -c 'cp /home/dev/annepro2* /host' . After that you can continue on flashing the firmware from the host system. ",
    "url": "https://openannepro.github.io/install_docker.html#the-following-build-script-is-provided-by-zinosat-on-the-discord-server",
    "relUrl": "/install_docker.html#the-following-build-script-is-provided-by-zinosat-on-the-discord-server"
  },"22": {
    "doc": "Build Using Docker",
    "title": "Build Using Docker",
    "content": " ",
    "url": "https://openannepro.github.io/install_docker.html",
    "relUrl": "/install_docker.html"
  },"23": {
    "doc": "How to Install",
    "title": "Install Instructions",
    "content": "** WARNING: these instructions are by no means complete, feel free to ask in the Discord Server if you encounter any problems. As we are still in early test stages.** . ",
    "url": "https://openannepro.github.io/install/#install-instructions",
    "relUrl": "/install/#install-instructions"
  },"24": {
    "doc": "How to Install",
    "title": "Alternative Docker Build Script",
    "content": "Checkout the docker build script provided by @zinosat. Dockerfile . ",
    "url": "https://openannepro.github.io/install/#alternative-docker-build-script",
    "relUrl": "/install/#alternative-docker-build-script"
  },"25": {
    "doc": "How to Install",
    "title": "Get AnnePro2 Tools",
    "content": ". | Install the latest stable rust toolchain using rustup | Also install Visual Studio Community edition including the C/C++ module to prevent errors while compiling | Download or Clone the AnnePro2-Tools project. | Compile the tool using cargo build --release . | The compiled tool should be in ./target/release/annepro2_tools (In later I will refer to this as annepro2_tools) | . ",
    "url": "https://openannepro.github.io/install/#get-annepro2-tools",
    "relUrl": "/install/#get-annepro2-tools"
  },"26": {
    "doc": "How to Install",
    "title": "Get QMK firmware",
    "content": "Hint: If you are on windows, I recommend completing this step using WSL. YMMV . | Clone our fork of the QMK firmware by using the command below. (Install Git if needed) git clone https://github.com/OpenAnnePro/qmk_firmware.git annepro-qmk --recursive --depth 1 . | Obtain the gcc-arm-none-eabi toolchain so you can build the project. | To compile the firmware type # For C15 Revision make annepro2/c15 # For C18 Revision make annepro2/c18 . This should complete without any error. And you should be able to see a file named annepro2_c15(18)_default.bin in your directory. This is a compiled keymap profile. This will be flashed on your keyboard later. You can also see additional default and other user-made keymaps in the same directory. You can choose to flash one of these instead. For specific information on their differences, check their keymap.c file in annepro_qmk/keyboards/annepro2/keymaps/*profile*/keymap.c. | . annepro2_c15(18)_default.bin has the exact same mapping as the default Obinskit, but with no caps-lock and layer indicators. annepro2_c15(18)_default-full-caps.bin is the same as previous, but the keyboard changes to red LEDs to indicate caps-lock. annepro2_c15(18)_default-layer-indicators.bin has the caps-lock indicator and it changes the LEDs to indicate what layer you’re on. Check the customization page for more information on these keymaps and customizing your own keymap . ",
    "url": "https://openannepro.github.io/install/#get-qmk-firmware",
    "relUrl": "/install/#get-qmk-firmware"
  },"27": {
    "doc": "How to Install",
    "title": "Flashing the firmware",
    "content": ". | Put the keyboard into DFU/IAP mode. | Run annepro2_tools with the firmware you just built. Please substitute with the correct paths and correct bin file if you chose another keymap profile annepro2_tools annepro2_c15_default.bin . If you have the C18 revision, you must specify the interface number. annepro2_tools annepro2_c18_default.bin -i=[[interface_number]] . Replace [[interface number]] with the keyboard’s interface number. | . If the tool reports can’t find device please double check you have the keyboard in IAP mode. Interface number can be found by running the tool without the -i flag: . annepro2_tools annepro2_c18_default.bin . The tool lists the usb devices with their information. Search for the device with the 0x04d9:8009 vid pid pair: HID Dev: 04d9:8009 if: [[interface_number]] Some(\"USB-HID IAP\"). This is the keyboard, interface number can be found here. If the tool doesn’t list the keyboard please double check you have the keyboard in IAP mode. ",
    "url": "https://openannepro.github.io/install/#flashing-the-firmware",
    "relUrl": "/install/#flashing-the-firmware"
  },"28": {
    "doc": "How to Install",
    "title": "Anne Pro 2 Shine",
    "content": "Building the shine firmware is very simailar to the QMK firmware. | Checkout the repository using git clone https://github.com/OpenAnnePro/annepro2-shine.git --recursive . | Build using # for C15 make C15 # for C18 make C18 # for both make . | If built without error you can find the binary in build/ directory. You will flash the .bin file using annepro2 tools. # for C15 annepro2_tools -t led build/annepro2-shine-C15.bin # for C18 annepro2_tools -t led -i=[[interface_number]] build/annepro2-shine-C18.bin . Enjoy! . | . ",
    "url": "https://openannepro.github.io/install/#anne-pro-2-shine",
    "relUrl": "/install/#anne-pro-2-shine"
  },"29": {
    "doc": "How to Install",
    "title": "How to Install",
    "content": " ",
    "url": "https://openannepro.github.io/install/",
    "relUrl": "/install/"
  },"30": {
    "doc": "HW Revision and Variations",
    "title": "C15 vs C18 Hardware Revision",
    "content": " ",
    "url": "https://openannepro.github.io/ap2_revisions/#c15-vs-c18-hardware-revision",
    "relUrl": "/ap2_revisions/#c15-vs-c18-hardware-revision"
  },"31": {
    "doc": "HW Revision and Variations",
    "title": "What’s different",
    "content": "The key differences are the microcontrolleres used. In the C15 revision, two HT32F52342, LQFP48 are used for the matrix and led controllers; however, in the C18 revision they used two HT32F52352, LQFP64. These two are very close in software perspective, but the pin mapping is slightly different. For details of the micro controller themselves, please refer to Holtek’s documentation. But in summary, the HT32F52352 comes with 128K flash and 16K ram, where the HT32F52342 comes with only 64K flash and 8K ram. ",
    "url": "https://openannepro.github.io/ap2_revisions/#whats-different",
    "relUrl": "/ap2_revisions/#whats-different"
  },"32": {
    "doc": "HW Revision and Variations",
    "title": "How do I tell?",
    "content": "There are various indicators as of which revision is which. Case . Flipping you keyboard over, C15 version seems to have “obinslab” engraved in the circle where as C18 has “Anne Pro”. USB ID . If you happen to have an Linux / macOS, you can identify this easily by using lsusb or system info. When the keyboard is in IAP mode, C15 revision will show up as having 04d9:8008 as its USB VendorID and ProductID pair. Where as the C18 revision has 04d9:8009. ",
    "url": "https://openannepro.github.io/ap2_revisions/#how-do-i-tell",
    "relUrl": "/ap2_revisions/#how-do-i-tell"
  },"33": {
    "doc": "HW Revision and Variations",
    "title": "HW Revision and Variations",
    "content": " ",
    "url": "https://openannepro.github.io/ap2_revisions/",
    "relUrl": "/ap2_revisions/"
  }
}
